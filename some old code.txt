function Mod:SpawnMeleeWeapon(player)
    local familiar = Isaac.Spawn(EntityType.ENTITY_FAMILIAR, MELEE_WEAPON_VARIANT, 0, player.Position, Vector(0,0), player):ToFamiliar()
    
    familiar:GetSprite():Load("gfx/008.003_donkey jawbone.anm2", true) -- Load custom sprite
    familiar.Player = player
    --familiar:AddToFollowers()
    familiar.Velocity = Vector(0,0)

    familiar.FireCooldown = 15 -- Delay between attacks

    -- Disable normal tears while melee is active
    player:GetData().UsingMeleeWeapon = true

end

function Mod:FamiliarUpdate(familiar)
    local player = familiar.Player
    local sprite = familiar:GetSprite()
    familiar.Position = player.Position -- Adjust position slightly forward
    --local offset = Vector(player:GetFireDirection(), 0) -- Adjust based on direction
    --familiar.Position = player.Position + offset
    local offset = Vector(0, 0) -- Default offset

    local direction = player:GetFireDirection()
    if direction == Direction.LEFT then
        familiar:GetSprite().Rotation = 270
        offset = Vector(-20, 0) -- Move left
    elseif direction == Direction.UP then
        offset = Vector(0, -20) -- Move up
        familiar:GetSprite().Rotation = 180
    elseif direction == Direction.DOWN then
        offset = Vector(0, 20) -- Move down
        familiar:GetSprite().Rotation = 0
    else
        offset = Vector(20, 0) -- Move right
        familiar:GetSprite().Rotation = 90 -- Default to right
    end

    
    -- Check if fire button is pressed
    if player:GetFireDirection() ~= Direction.NO_DIRECTION then
        if familiar.FireCooldown <= 0 then
            sprite:Play("Swing", true) -- Play attack animation
            SFXManager():Play(swordSpinSound) -- Attack sound effect

            -- Spawn hitbox effect for damage
            local hitbox = Isaac.Spawn(EntityType.ENTITY_EFFECT, EffectVariant.POOF01, 0, familiar.Position + Vector(40,0), Vector(0,0), player)
            hitbox:ToEffect():SetTimeout(5) -- Hitbox lasts briefly
            
            familiar.FireCooldown = 15 -- Reset attack cooldown
        end
    end
    
    -- Reduce attack cooldown
    familiar.FireCooldown = math.max(0, familiar.FireCooldown - 1)
end

Mod:AddCallback(ModCallbacks.MC_FAMILIAR_UPDATE, Mod.FamiliarUpdate, MELEE_WEAPON_VARIANT)


        --Mod:SpawnMeleeWeapon(player)
        
        --[[ local spiritSwordID = CollectibleType.COLLECTIBLE_SPIRIT_SWORD
        local data = player:GetData()

        if not player:HasCollectible(spiritSwordID) then
            player:AddCollectible(spiritSwordID, 0, true) -- Give Spirit Sword
            data.SpiritSwordTimer = 600 -- 10 seconds (600 frames)
            data.HadSpiritSword = false -- Track that player didn't originally have the item
            SFXManager():Play(SoundEffect.SOUND_BERSERK_START)          
            --local sprite = player:GetSprite()
            --sprite:ReplaceSpritesheet(0, "gfx/effect_donkeyjawbone.png") -- Use your custom sprite
            --sprite:LoadGraphics()
        else
            SFXManager():Play(SoundEffect.SOUND_BERSERK_START)  
            data.HadSpiritSword = true -- Player already owned it    
        end ]]

        
        --local effect = Isaac.Spawn(EntityType.ENTITY_EFFECT, EffectVariant.POOF01, 0, player.Position, Vector(0,0), player)
       ---effect:ToEffect():SetTimeout(30) -- Effect lasts briefly


-- Update function to handle countdown and removal
function Mod:UpdateSpiritSwordTimer(player)
    local data = player:GetData()
    if data.SpiritSwordTimer then
        data.SpiritSwordTimer = math.max(0, data.SpiritSwordTimer - 1) -- Decrease timer

        -- Extend timer on enemy hit
        for _, enemy in pairs(Isaac.FindInRadius(player.Position, 40, EntityPartition.ENEMY)) do
            if enemy:HasMortalDamage() then
                data.SpiritSwordTimer = data.SpiritSwordTimer + 30 -- Extend by 0.5 seconds (30 frames)
            end
        end  

        -- **Looping Effect During Last 3 Seconds**
        if data.SpiritSwordTimer == 180 then
            SFXManager():Play(SoundEffect.SOUND_BERSERK_TICK, 1, 0, false, 1)
        end  

        -- Remove Spirit Sword when timer runs out (if player didn't originally have it)
        if data.SpiritSwordTimer == 0 and not data.HadSpiritSword then
            SFXManager():Play(SoundEffect.SOUND_BERSERK_END)
            player:RemoveCollectible(CollectibleType.COLLECTIBLE_SPIRIT_SWORD)
            -- Play Berserk exit sound effect
            data.SpiritSwordTimer = nil -- Cleanup
        else
            SFXManager():Play(SoundEffect.SOUND_BERSERK_END)
            data.SpiritSwordTimer = nil -- Cleanup
        end
    end
end

Mod:AddCallback(ModCallbacks.MC_POST_PLAYER_UPDATE, Mod.UpdateSpiritSwordTimer)